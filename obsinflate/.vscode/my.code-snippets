{
	// Place your obsinflate workspace snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and
	// description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope
	// is left empty or omitted, the snippet gets applied to all languages. The prefix is what is
	// used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders.
	// Placeholders with the same ids are connected.
	// Example:
	"Jest describe": {
		"scope": "typescript",
		"prefix": "describe",
		"body": [
            "describe('$1', () => {",
            "\t$2",
            "});"
		],
		"description": "Create a new jest test suite"
	},
    "Jest it": {
		"scope": "typescript",
		"prefix": "it",
		"body": [
            "it('$1', async () => {",
            "\t// Arrange",
            "\t$2",
            "\t// Act",
            "\t// Assert",
            "});"
		],
		"description": "Create a new jest test suite"
	},
    "Jest it todo": {
		"scope": "typescript",
		"prefix": "it",
		"body": [
            "it.todo('$1');"
		],
		"description": "Create a new jest test suite todo"
	},
    "QuickAdd entry point":{
        "scope": "typescript",
        "prefix": "qsentry",
        "body": [
            "import { SettingableScriptEntryPoint } from '@obsinflate/api/quick-add/settingableScriptEntryPoint';",
            "import { Parameters } from '@obsinflate/api/quick-add/parameters';",
            "import { Settings } from '@obsinflate/api/quick-add/settings/settings';",
            "import { SettingsBuilder } from '@obsinflate/core/quick-add/settingsBuilder';",
            "import { Noticer } from '@obsinflate/api/obsidian/noticer';",
            "import { ErrorNoticer } from '@obsinflate/core/errorNoticer';",
            "",
            "export class EntryPoint implements SettingableScriptEntryPoint {",
            "\tasync entry(params: Parameters, settings: Settings): Promise<void> {",
            "\t\tconst settingsBuilder = new SettingsBuilder<$1>();",
            "\t\tconst noticer = new Noticer();",
            "\t\tconst errorNoticer = new ErrorNoticer(noticer);",
            "\t\tconst script = new $2(",
            "\t\t\terrorNoticer,",
            "\t\t\tsettingsBuilder.build(settings, SettingsDefinition)",
            "\t\t);",
            "\t\tawait script.entry(params);",
            "\t}",
            "\tsettings = SettingsDefinition;",
            "}",
            "",
            "module.exports = new EntryPoint();",
            "",
        ],
        "description": "Quickly add an entry point"
    },
}
